/*! @copyright Apollo GraphQL | @license MIT | @link apollographql.com | @version 0.2.13 *//* eslint-disable */import{__assign as e}from"./tslib.js";import{print as r}from"./graphql.js";import{InvariantError as t}from"./ts-invariant.js";var n={http:{includeQuery:!0,includeExtensions:!1},headers:{accept:"*/*","content-type":"application/json"},options:{method:"POST"}},o=function(e,r,t){var n=new Error(t);throw n.name="ServerError",n.response=e,n.statusCode=e.status,n.result=r,n},a=function(e){return function(r){return r.text().then(function(e){try{return JSON.parse(e)}catch(n){var t=n;return t.name="ServerParseError",t.response=r,t.statusCode=r.status,t.bodyText=e,Promise.reject(t)}}).then(function(t){return r.status>=300&&o(r,t,"Response not successful: Received status code "+r.status),Array.isArray(t)||t.hasOwnProperty("data")||t.hasOwnProperty("errors")||o(r,t,"Server response was missing for query '"+(Array.isArray(e)?e.map(function(e){return e.operationName}):e.operationName)+"'."),t})}},s=function(e){if(!e&&"undefined"==typeof fetch){var r="unfetch";throw"undefined"==typeof window&&(r="node-fetch"),"production"===process.env.NODE_ENV?new t(1):new t("\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\nyour environment like https://www.npmjs.com/package/"+r+".\n\nFor example:\nimport fetch from '"+r+"';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });")}},i=function(){if("undefined"==typeof AbortController)return{controller:!1,signal:!1};var e=new AbortController;return{controller:e,signal:e.signal}},c=function(t,n){for(var o=[],a=2;a<arguments.length;a++)o[a-2]=arguments[a];var s=e({},n.options,{headers:n.headers,credentials:n.credentials}),i=n.http;o.forEach(function(r){s=e({},s,r.options,{headers:e({},s.headers,r.headers)}),r.credentials&&(s.credentials=r.credentials),i=e({},i,r.http)});var c=t.operationName,u=t.extensions,p=t.variables,f=t.query,l={operationName:c,variables:p};return i.includeExtensions&&(l.extensions=u),i.includeQuery&&(l.query=r(f)),{options:s,body:l}},u=function(e,r){var n;try{n=JSON.stringify(e)}catch(e){var o="production"===process.env.NODE_ENV?new t(2):new t("Network request failed. "+r+" is not serializable: "+e.message);throw o.parseError=e,o}return n},p=function(e,r){var t=e.getContext().uri;return t||("function"==typeof r?r(e):r||"/graphql")};export{n as fallbackHttpConfig,o as throwServerError,a as parseAndCheckHttpResponse,s as checkFetcher,i as createSignalIfSupported,c as selectHttpOptionsAndBody,u as serializeFetchParameter,p as selectURI};