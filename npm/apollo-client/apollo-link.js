/*! @copyright Apollo GraphQL | @license MIT | @link apollographql.com | @version 1.2.11 *//* eslint-disable */import e from"./zen-observable.js";export{default as Observable}from"./zen-observable.js";import{invariant as n,InvariantError as t}from"./ts-invariant.js";import{__extends as r,__assign as o}from"./tslib.js";import{print as u}from"./graphql.js";import{getOperationName as i}from"./apollo-utilities.js";export{getOperationName}from"./apollo-utilities.js";var f=function(e){function n(n,t){var r=e.call(this,n)||this;return r.link=t,r}return r(n,e),n}(Error);function c(e){return e.request.length<=1}function a(e){var t=!1;return new Promise(function(r,o){e.subscribe({next:function(e){t?"production"===process.env.NODE_ENV||n.warn("Promise Wrapper does not support multiple results from Observable"):(t=!0,r(e))},error:o})})}var s=a;function p(n){return new e(function(e){n.then(function(n){e.next(n),e.complete()}).catch(e.error.bind(e))})}function l(n){return new e(function(e){e.error(n)})}function m(e,n){var t=o({},e);return Object.defineProperty(n,"setContext",{enumerable:!1,value:function(e){t=o({},t,"function"==typeof e?e(t):e)}}),Object.defineProperty(n,"getContext",{enumerable:!1,value:function(){return o({},t)}}),Object.defineProperty(n,"toKey",{enumerable:!1,value:function(){return function(e){return u(e.query)+"|"+JSON.stringify(e.variables)+"|"+e.operationName}(n)}}),n}function v(n,t){return t?t(n):e.of()}function b(e){return"function"==typeof e?new N(e):e}function w(){return new N(function(){return e.of()})}function q(e){return 0===e.length?w():e.map(b).reduce(function(e,n){return e.concat(n)})}function y(n,t,r){var o=b(t),u=b(r||new N(v));return c(o)&&c(u)?new N(function(t){return n(t)?o.request(t)||e.of():u.request(t)||e.of()}):new N(function(t,r){return n(t)?o.request(t,r)||e.of():u.request(t,r)||e.of()})}var h=function(t,r){var o=b(t);if(c(o))return"production"===process.env.NODE_ENV||n.warn(new f("You are calling concat on a terminating link, which will have no effect",o)),o;var u=b(r);return c(u)?new N(function(n){return o.request(n,function(n){return u.request(n)||e.of()})||e.of()}):new N(function(n,t){return o.request(n,function(n){return u.request(n,t)||e.of()})||e.of()})},N=function(){function e(e){e&&(this.request=e)}return e.prototype.split=function(n,t,r){return this.concat(y(n,t,r||new e(v)))},e.prototype.concat=function(e){return h(this,e)},e.prototype.request=function(e,n){throw"production"===process.env.NODE_ENV?new t(1):new t("request is not implemented")},e.empty=w,e.from=q,e.split=y,e.execute=g,e}();function g(n,r){return n.request(m(r.context,function(e){var n={variables:e.variables||{},extensions:e.extensions||{},operationName:e.operationName,query:e.query};return n.operationName||(n.operationName="string"!=typeof n.query?i(n.query):""),n}(function(e){for(var n=["query","operationName","variables","extensions","context"],r=0,o=Object.keys(e);r<o.length;r++){var u=o[r];if(n.indexOf(u)<0)throw"production"===process.env.NODE_ENV?new t(2):new t("illegal argument: "+u)}return e}(r))))||e.of()}export{m as createOperation,s as makePromise,a as toPromise,p as fromPromise,l as fromError,w as empty,q as from,y as split,h as concat,N as ApolloLink,g as execute};